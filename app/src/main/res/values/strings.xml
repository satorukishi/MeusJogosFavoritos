<resources>
    <string name="app_name">MeusJogosFavoritos</string>
    <string name="titulo_super_mario_odyssey">Super Mario Odyssey</string>

    <!--Permite passar parâmetros para a minha string "lancamento"-->
    <string name="lancamento">Lançamento: %1$s</string>
    <string name="descricao_super_mario_odyssey">Em Super Mario Odyssey, o jogador joga como Mario em suas aventuras por terras além do Reino dos Cogumelos com o auxílio de um novo personagem introduzido no jogo, o Cappy. Esse "chapéu vivo" garante um novo acréscimo à dificuldade e a dinâmica já vista nos jogos anteriores, pois além de ser uma forma de ataque além do seu tradicional pulo, ele dá também a habilidade de "capturar" os carismáticos inimigos da série e alguns objetos. A nova mecânica funciona da seguinte maneira: ao chacoalhar os Joy-Cons ou apertar um simples botão, Cappy é arremessado e volta para a cabeça de Mario automaticamente, apenas se não encostar em algo que ele possa interagir.[4] Há também vários outros simples movimentos com os Joy-Cons que fazem o chapéu rodear o cenário de maneiras diferentes, sendo útil de várias maneiras, como por exemplo a possibilidade de coletar moedas eliminar inimigos ao seu redor com mais rapidez. As mecânicas já vistas anteriormente como o "Ground Pound" e o "Wall Jump" também estão presentes no game.

O jogo consiste em coletar "Power Moons" (Luas de Poder) para poder viajar pelo mundo com a nave Odyssey. O mundo é dividido em 17 reinos, que possuem características únicas e foram planejados para diferentes formas de exploração. Alguns também fazem referência a lugares famosos reais, como ocorre em New Donk City. Cada lugar tem suas Regional Coins (moedas regionais), e elas tem uma forma diferente dependendo da região onde se localizam. Um detalhe importante é que o game inclui em seus reinos pequenas partes com a gameplay em 2D que servem para escalar construções ou para ir a outro lugar do cenário, nos remetendo aos antigos jogos da franquia. A jogabilidade desses trechos é quase a mesma de Super Mario Bros. do NES com pouquíssimas alterações (como em alguns trechos onde a gravidade muda).

Elementos fixos da franquia não foram colocados no jogo, como o sistema de vidas e os Power-Ups. Ao morrer, Mario apenas perde 10 moedas e retorna do seu último checkpoint (mesmo se não tiver nenhuma moeda não ocorre um Game-Over). Para gastar suas moedas o jogo apresenta a lojas Crazy Cap. Localizadas em todos os reinos, é aonde são vendidas roupas novas para o Mario e outros itens colecionáveis. As roupas podem ser compradas tanto com as moedas normais quanto com as moedas locais, e algumas são desbloqueadas também com os amiibos (apesar de não precisar ter um, uma vez que todas as roupas e colecionáveis já são desbloqueáveis dentro do próprio jogo). Cada Amiibo também pode interferir no gameplay de um jeito, como dando invencibilidade temporária, vidas extras e revelando localizações de Power Moons.

O game também apresenta o "Snapshot Mode", onde o jogador pode pausar e tirar fotos durante o gameplay, mudando o ângulo e aplicando alguns filtros.

Super Mario Odyssey está disponível em 13 idiomas: Alemão, Chinês Simplificado, Chinês Tradicional, Inglês, Coreano, Espanhol Europeu, Espanhol Latino-Americano, Francês Europeu, Francês Canadense, Holandês, Italiano, Japonês, Russo.

Em Fevereiro de 2018, o jogo recebeu um DLC chamado "Luigi’s Balloon Challenge", e, segundo seu produtor (Yoshiaki Koizumi), ainda haverão mais DLC's futuramente.[5]

No modo portátil ele roda a 720p e 60fps, e a 900p e 60fps quando o console está conectado ao Dock.</string>
    <string name="title_activity_detalhe">DetalheActivity</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="action_settings">Settings</string>
</resources>
